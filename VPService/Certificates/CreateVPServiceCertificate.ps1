# Script to generate a self-signed certificate for the VPService, so you can connect using HTTPS. If you plan on using HTTP only, please disregard this.
#
# If you are running VPService on the same computer as the XProtect Recording Server, ignore this and use Microsoft's advice and type: "dotnet dev-certs https --trust"
# This script is useful when running the service on a computer different from the one running the XProtect recording server, which will often be the preferred situation.

# Step 1: Generate a CA certificate, which you can use to sign the self-signed certificate in the step 2
$ca_certificate = New-SelfSignedCertificate -CertStoreLocation Cert:\LocalMachine\My -DnsName 'VPS Certificate Authority' -KeyUsageProperty All -KeyUsage CertSign, CRLSign, DigitalSignature -FriendlyName 'VPS CA Certificate'

# You will want to export that certificate to a .pfx file, so you can copy that file to the XProtect Recording Server computer and import it there.
# In this export, the private key will not be included.
$machine = $env:COMPUTERNAME
Export-Certificate -Cert "Cert:\LocalMachine\My\$($ca_certificate.Thumbprint)" -FilePath .\root_authority_public_$machine.pfx

# You might want to export the CA certificate to a file including the private key. In that case you provide a password. Change "1234" below to something else, then.
# $passwordCA = ConvertTo-SecureString -String "1234" -Force -AsPlainText
# Export-PfxCertificate -Cert "Cert:\LocalMachine\My\$($ca_certificate.Thumbprint)" -FilePath .\root_authority_private_$machine.pfx -Password $passwordCA

# Next set up some parameters
$domain = $env:USERDNSDOMAIN
$fs = New-Object -TypeName System.Security.AccessControl.FileSecurity
$fullControl = [System.Security.AccessControl.FileSystemRights]::FullControl
$allow = [System.Security.AccessControl.AccessControlType]::Allow 
$accessRule = New-Object -TypeName System.Security.AccessControl.FileSystemAccessRule -ArgumentList 'NT Authority\SYSTEM', $fullControl, $allow
$fs.AddAccessRule($accessRule)
$accessRule = New-Object -TypeName System.Security.AccessControl.FileSystemAccessRule -ArgumentList 'NT Authority\NETWORKSERVICE', $fullControl, $allow
$fs.AddAccessRule($accessRule)
$accessRule = New-Object -TypeName System.Security.AccessControl.FileSystemAccessRule -ArgumentList '.\Administrators', $fullControl, $allow
$fs.AddAccessRule($accessRule)
 
# Step 2: Generate a self-signed certificate, which the VPService shall present to its client, the XProtect Recording Server
# The new certificate is signed with the CA certificate generated in step 1.
# The Program.cs file in the VPService contains code which will pick the certificate generated below.
$certificate = New-SelfSignedCertificate -CertStoreLocation Cert:\LocalMachine\My -Subject $machinename -DnsName $machine, "$machine.$domain", 'localhost' -Signer $ca_certificate -FriendlyName 'VPService Certificate' -SecurityDescriptor $fs

# If for some reason, like Docker, you can't access a certificate store from where you run VPService, then run the Export-PfxCertificate line below here
# You shall then also enable the alternate code in Program.cs which reads the certificate from a file instead of from a certificate store. Search for UseHttps.
# The password must be present, and it must be repeated in the Program.cs code, but it need not be the same as above. Don't use "5678".
$password = ConvertTo-SecureString -String "5678" -Force -AsPlainText
Export-PfxCertificate -Cert "Cert:\LocalMachine\My\$($certificate.Thumbprint)" -FilePath .\$machine.pfx -Password $password

# This will import the CA certificate from step 1, so the computer on which this script runs will trust certificates signed by the CA certificate.
Import-Certificate -FilePath .\root_authority_public_$machine.pfx -CertStoreLocation Cert:\LocalMachine\AuthRoot

# The last step is to make the computer, on which the XProtect Recording Server runs, also trust certificates signed by the CA certificate from step 1.
#
# Copy the root_authority_public.pfx file generated by this script to the computer, on which the XProtect Recording Server runs.
# There, start "Manage computer certificates" (type mmc in terminal), right-click on Trusted Root Certification Authorities\Certificates and select All Tasks\Importâ€¦
# In the Import wizard, select the copied-over file root_authority_public.pfx, and place it in the Certificate store named: Third-Party Root Certification Authorities. 

